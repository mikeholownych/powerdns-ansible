- name: Install monitoring packages
  ansible.builtin.package:
    name:
      - htop
      - iotop
      - nethogs
      - tcpdump
      - nmap
      - telnet
      - curl
      - jq
    state: present
  tags:
    - monitoring
- name: Create monitoring directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /var/log/monitoring
    - /opt/monitoring
    - /etc/monitoring
  tags:
    - monitoring
- name: Install PowerDNS monitoring script
  ansible.builtin.template:
    src: powerdns-monitor.sh.j2
    dest: /usr/local/bin/powerdns-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - monitoring
- name: Install system resource monitoring script
  ansible.builtin.template:
    src: system-monitor.sh.j2
    dest: /usr/local/bin/system-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - monitoring
- name: Install DNS query monitoring script
  ansible.builtin.template:
    src: dns-query-monitor.sh.j2
    dest: /usr/local/bin/dns-query-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - monitoring
- name: Create monitoring configuration
  ansible.builtin.template:
    src: monitoring.conf.j2
    dest: /etc/monitoring/monitoring.conf
    owner: root
    group: root
    mode: '0644'
  tags:
    - monitoring
- name: Schedule PowerDNS monitoring
  ansible.builtin.cron:
    name: PowerDNS monitoring check
    cron_file: powerdns-monitoring
    user: root
    minute: '*/5'
    job: /usr/local/bin/powerdns-monitor.sh >> /var/log/monitoring/powerdns-monitor.log
      2>&1
    state: '{{ ''present'' if monitoring_config.enabled | default(true) else ''absent''
      }}'
  tags:
    - monitoring
- name: Schedule system monitoring
  ansible.builtin.cron:
    name: System resource monitoring
    cron_file: system-monitoring
    user: root
    minute: '*/10'
    job: /usr/local/bin/system-monitor.sh >> /var/log/monitoring/system-monitor.log
      2>&1
    state: '{{ ''present'' if monitoring_config.enabled | default(true) else ''absent''
      }}'
  tags:
    - monitoring
- name: Schedule DNS query monitoring
  ansible.builtin.cron:
    name: DNS query monitoring
    cron_file: dns-monitoring
    user: root
    minute: '*/2'
    job: /usr/local/bin/dns-query-monitor.sh >> /var/log/monitoring/dns-monitor.log
      2>&1
    state: '{{ ''present'' if monitoring_config.enabled | default(true) else ''absent''
      }}'
  tags:
    - monitoring
- name: Configure log rotation for monitoring logs
  ansible.builtin.template:
    src: monitoring-logrotate.j2
    dest: /etc/logrotate.d/monitoring
    owner: root
    group: root
    mode: '0644'
  tags:
    - monitoring
- name: Install alerting script
  ansible.builtin.template:
    src: alert-manager.sh.j2
    dest: /usr/local/bin/alert-manager.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - monitoring
- name: Create monitoring dashboard script
  ansible.builtin.template:
    src: monitoring-dashboard.sh.j2
    dest: /usr/local/bin/monitoring-dashboard.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - monitoring
- name: Install Prometheus node exporter (if enabled)
  ansible.builtin.include_tasks: install_prometheus.yml
  when: monitoring_config.prometheus_port is defined
  tags:
    - monitoring
- name: Display monitoring setup status
  ansible.builtin.debug:
    msg:
      - Monitoring setup completed
      - 'PowerDNS monitoring: Every 5 minutes'
      - 'System monitoring: Every 10 minutes'
      - 'DNS query monitoring: Every 2 minutes'
      - 'Logs location: /var/log/monitoring/'
      - 'Dashboard: /usr/local/bin/monitoring-dashboard.sh'
  tags:
    - monitoring
