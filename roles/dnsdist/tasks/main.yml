- name: Create dnsdist system user
  ansible.builtin.user:
    name: dnsdist
    system: true
    shell: /bin/false
    home: /var/lib/dnsdist
    create_home: true
  tags:
    - dnsdist
- name: Install DNSdist packages
  ansible.builtin.package:
    name: '{{ dnsdist_packages[ansible_os_family] }}'
    state: present
  vars:
    dnsdist_packages:
      Debian:
        - dnsdist
      RedHat:
        - dnsdist
  tags:
    - dnsdist
- name: Create DNSdist directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: dnsdist
    group: dnsdist
    mode: '0755'
  loop:
    - /etc/dnsdist
    - /var/lib/dnsdist
    - /var/log/dnsdist
  tags:
    - dnsdist
- name: Generate DNSdist configuration
  ansible.builtin.template:
    src: dnsdist.conf.j2
    dest: /etc/dnsdist/dnsdist.conf
    owner: dnsdist
    group: dnsdist
    mode: '0640'
    backup: true
  notify: Restart dnsdist
  tags:
    - dnsdist
- name: Create DNSdist systemd override
  ansible.builtin.template:
    src: dnsdist-override.conf.j2
    dest: /etc/systemd/system/dnsdist.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload systemd
    - Restart dnsdist
  tags:
    - dnsdist
- name: Configure DNSdist health checks
  ansible.builtin.template:
    src: dnsdist-health-check.lua.j2
    dest: /etc/dnsdist/health-check.lua
    owner: dnsdist
    group: dnsdist
    mode: '0644'
  notify: Restart dnsdist
  tags:
    - dnsdist
- name: Create DNSdist management scripts
  ansible.builtin.template:
    src: '{{ item }}.j2'
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: '0755'
  loop:
    - dnsdist-stats.sh
    - dnsdist-manage.sh
    - dnsdist-health.sh
  tags:
    - dnsdist
- name: Configure firewall for DNSdist
  community.general.ufw:
    rule: allow
    port: '{{ item }}'
    proto: '{{ item.split(''/'')[1] if ''/'' in item else ''tcp'' }}'
    comment: DNSdist Load Balancer
  loop:
    - '{{ dnsdist_port | default(53) }}/tcp'
    - '{{ dnsdist_port | default(53) }}/udp'
    - '{{ dnsdist_console_port | default(5199) }}/tcp'
    - '{{ dnsdist_webserver_port | default(8083) }}/tcp'
  when:
    - ansible_os_family == "Debian"
    - firewall_enabled | default(true)
  tags:
    - dnsdist
- name: Enable and start DNSdist service
  ansible.builtin.systemd:
    name: dnsdist
    enabled: true
    state: started
    daemon_reload: true
  tags:
    - dnsdist
- name: Wait for DNSdist to start
  ansible.builtin.wait_for:
    port: '{{ dnsdist_port | default(53) }}'
    host: '{{ ansible_default_ipv4.address }}'
    delay: 5
    timeout: 30
  tags:
    - dnsdist
- name: Test DNSdist functionality
  ansible.builtin.command: dig @{{ ansible_default_ipv4.address }} google.com
  register: dnsdist_test
  failed_when: dnsdist_test.rc != 0
  changed_when: false
  tags:
    - dnsdist
- name: Display DNSdist test result
  ansible.builtin.debug:
    msg: 'DNSdist test: {{ ''PASSED'' if dnsdist_test.rc == 0 else ''FAILED'' }}'
  tags:
    - dnsdist
- name: Create DNSdist monitoring configuration
  ansible.builtin.template:
    src: dnsdist-prometheus.lua.j2
    dest: /etc/dnsdist/prometheus.lua
    owner: dnsdist
    group: dnsdist
    mode: '0644'
  notify: Restart dnsdist
  when: prometheus_enabled | default(false)
  tags:
    - dnsdist
- name: Schedule DNSdist statistics collection
  ansible.builtin.cron:
    name: DNSdist Statistics Collection
    cron_file: dnsdist-stats
    user: root
    minute: '*/5'
    job: /usr/local/bin/dnsdist-stats.sh
    state: present
  when: monitoring_enabled | default(true)
  tags:
    - dnsdist
