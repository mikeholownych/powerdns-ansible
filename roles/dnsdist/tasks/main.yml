---
# DNSdist Load Balancer for PowerDNS

- name: Create dnsdist system user
  user:
    name: dnsdist
    system: yes
    shell: /bin/false
    home: /var/lib/dnsdist
    create_home: yes

- name: Install DNSdist packages
  package:
    name: "{{ dnsdist_packages[ansible_os_family] }}"
    state: present
  vars:
    dnsdist_packages:
      Debian: ['dnsdist']
      RedHat: ['dnsdist']

- name: Create DNSdist directories
  file:
    path: "{{ item }}"
    state: directory
    owner: dnsdist
    group: dnsdist
    mode: '0755'
  loop:
    - /etc/dnsdist
    - /var/lib/dnsdist
    - /var/log/dnsdist

- name: Generate DNSdist configuration
  template:
    src: dnsdist.conf.j2
    dest: /etc/dnsdist/dnsdist.conf
    owner: dnsdist
    group: dnsdist
    mode: '0640'
    backup: yes
  notify: restart dnsdist

- name: Create DNSdist systemd override
  template:
    src: dnsdist-override.conf.j2
    dest: /etc/systemd/system/dnsdist.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart dnsdist

- name: Configure DNSdist health checks
  template:
    src: dnsdist-health-check.lua.j2
    dest: /etc/dnsdist/health-check.lua
    owner: dnsdist
    group: dnsdist
    mode: '0644'
  notify: restart dnsdist

- name: Create DNSdist management scripts
  template:
    src: "{{ item }}.j2"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: '0755'
  loop:
    - dnsdist-stats.sh
    - dnsdist-manage.sh
    - dnsdist-health.sh

- name: Configure firewall for DNSdist
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: "{{ item.split('/')[1] if '/' in item else 'tcp' }}"
    comment: "DNSdist Load Balancer"
  loop:
    - "{{ dnsdist_port | default(53) }}/tcp"
    - "{{ dnsdist_port | default(53) }}/udp"
    - "{{ dnsdist_console_port | default(5199) }}/tcp"
    - "{{ dnsdist_webserver_port | default(8083) }}/tcp"
  when: 
    - ansible_os_family == "Debian"
    - firewall_enabled | default(true)

- name: Enable and start DNSdist service
  systemd:
    name: dnsdist
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for DNSdist to start
  wait_for:
    port: "{{ dnsdist_port | default(53) }}"
    host: "{{ ansible_default_ipv4.address }}"
    delay: 5
    timeout: 30

- name: Test DNSdist functionality
  command: dig @{{ ansible_default_ipv4.address }} google.com
  register: dnsdist_test
  failed_when: dnsdist_test.rc != 0
  changed_when: false
  ignore_errors: yes

- name: Display DNSdist test result
  debug:
    msg: "DNSdist test: {{ 'PASSED' if dnsdist_test.rc == 0 else 'FAILED' }}"

- name: Create DNSdist monitoring configuration
  template:
    src: dnsdist-prometheus.lua.j2
    dest: /etc/dnsdist/prometheus.lua
    owner: dnsdist
    group: dnsdist
    mode: '0644'
  notify: restart dnsdist
  when: prometheus_enabled | default(false)

- name: Schedule DNSdist statistics collection
  cron:
    name: "DNSdist Statistics Collection"
    cron_file: dnsdist-stats
    user: root
    minute: "*/5"
    job: "/usr/local/bin/dnsdist-stats.sh"
    state: present
  when: monitoring_enabled | default(true)
