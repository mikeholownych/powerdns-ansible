# Prometheus Configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'powerdns-cluster'
    environment: '{{ environment | default("production") }}'

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - localhost:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:{{ prometheus_port | default(9090) }}']
    scrape_interval: 30s
    metrics_path: /metrics

  # PowerDNS Authoritative Servers
  - job_name: 'powerdns-auth'
    static_configs:
      - targets:
{% for host in groups['powerdns_primary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ powerdns_exporter_port | default(9120) }}'
{% endfor %}
{% for host in groups['powerdns_secondary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ powerdns_exporter_port | default(9120) }}'
{% endfor %}
    scrape_interval: 15s
    metrics_path: /metrics
    params:
      server: ['{{ ansible_default_ipv4.address }}:{{ powerdns_webserver_port | default(8081) }}']
      api_key: ['{{ powerdns_api_key }}']

  # PowerDNS Recursor Servers
  - job_name: 'powerdns-recursor'
    static_configs:
      - targets:
{% for host in groups['powerdns_recursor'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ recursor_exporter_port | default(9199) }}'
{% endfor %}
    scrape_interval: 15s
    metrics_path: /metrics

  # MySQL/MariaDB Servers
  - job_name: 'mysql'
    static_configs:
      - targets:
{% for host in groups['powerdns_primary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ mysql_exporter_port | default(9104) }}'
{% endfor %}
{% for host in groups['powerdns_secondary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ mysql_exporter_port | default(9104) }}'
{% endfor %}
    scrape_interval: 30s
    metrics_path: /metrics

  # HAProxy Load Balancers
  - job_name: 'haproxy'
    static_configs:
      - targets:
{% for host in groups['haproxy_servers'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ haproxy_exporter_port | default(9101) }}'
{% endfor %}
    scrape_interval: 15s
    metrics_path: /metrics

  # Node Exporters (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets:
{% for host in groups['all'] %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ node_exporter_port | default(9100) }}'
{% endfor %}
    scrape_interval: 30s
    metrics_path: /metrics

  # Keepalived VRRP Monitoring
  - job_name: 'keepalived'
    static_configs:
      - targets:
{% for host in groups['powerdns_primary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ keepalived_exporter_port | default(9165) }}'
{% endfor %}
{% for host in groups['powerdns_secondary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ keepalived_exporter_port | default(9165) }}'
{% endfor %}
    scrape_interval: 30s
    metrics_path: /metrics

  # Custom PowerDNS Metrics (from our custom exporter)
  - job_name: 'powerdns-custom'
    static_configs:
      - targets:
{% for host in groups['powerdns_primary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ custom_metrics_port | default(9121) }}'
{% endfor %}
{% for host in groups['powerdns_secondary'] | default([]) %}
        - '{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ custom_metrics_port | default(9121) }}'
{% endfor %}
    scrape_interval: 15s
    metrics_path: /metrics
    honor_labels: true

# Remote write configuration (optional - for long-term storage)
{% if prometheus_remote_write_enabled | default(false) %}
remote_write:
  - url: "{{ prometheus_remote_write_url }}"
    basic_auth:
      username: "{{ prometheus_remote_write_username }}"
      password: "{{ prometheus_remote_write_password }}"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'powerdns_.*|mysql_.*|haproxy_.*|node_.*'
        action: keep
{% endif %}

# Storage configuration
storage:
  tsdb:
    path: /var/lib/prometheus/data
    retention.time: {{ prometheus_retention | default('30d') }}
    retention.size: {{ prometheus_retention_size | default('10GB') }}
    wal-compression: true

# Web configuration
web:
  listen-address: '0.0.0.0:{{ prometheus_port | default(9090) }}'
  external-url: 'http://{{ ansible_default_ipv4.address }}:{{ prometheus_port | default(9090) }}'
  enable-lifecycle: true
  enable-admin-api: true
  console.templates: '/etc/prometheus/consoles'
  console.libraries: '/etc/prometheus/console_libraries'

# Log configuration
log:
  level: {{ prometheus_log_level | default('info') }}
  format: json
