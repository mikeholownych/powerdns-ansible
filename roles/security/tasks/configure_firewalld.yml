---
# Configure firewalld for RHEL/CentOS systems

- name: Start and enable firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Set default zone to public
  firewalld:
    zone: public
    state: enabled
    permanent: yes
    immediate: yes
  when: ansible_os_family == "RedHat"

- name: Configure DNS firewall rules
  firewalld:
    port: "{{ item.port }}/{{ item.proto }}"
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
  loop: "{{ firewall_ports }}"
  when: ansible_os_family == "RedHat"

- name: Allow SSH access
  firewalld:
    service: ssh
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
  when: ansible_os_family == "RedHat"

- name: Allow PowerDNS API access
  firewalld:
    port: "{{ powerdns_webserver_port | default(8081) }}/tcp"
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
    source: "{{ dns_network }}"
  when: 
    - ansible_os_family == "RedHat"
    - powerdns_webserver_port is defined

- name: Allow database access from localhost
  firewalld:
    port: "{{ powerdns_db_port }}/tcp"
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
    source: "127.0.0.1/32"
  when: ansible_os_family == "RedHat"

- name: Allow monitoring ports (if Prometheus is enabled)
  firewalld:
    port: "{{ monitoring_config.prometheus_port }}/tcp"
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
    source: "{{ dns_network }}"
  when: 
    - ansible_os_family == "RedHat"
    - monitoring_config.prometheus_port is defined

- name: Allow NTP
  firewalld:
    service: ntp
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
  when: ansible_os_family == "RedHat"

- name: Create rich rules for zone transfers between DNS servers
  firewalld:
    rich_rule: 'rule family="ipv4" source address="{{ hostvars[item]["ansible_default_ipv4"]["address"] }}" port protocol="tcp" port="53" accept'
    zone: public
    permanent: yes
    state: enabled
    immediate: yes
  loop: "{{ groups['powerdns_servers'] }}"
  when: 
    - ansible_os_family == "RedHat"
    - item != inventory_hostname

- name: Set firewalld default target to DROP
  firewalld:
    zone: public
    target: DROP
    permanent: yes
    state: enabled
    immediate: yes
  when: ansible_os_family == "RedHat"

- name: Enable firewalld logging
  lineinfile:
    path: /etc/firewalld/firewalld.conf
    regexp: '^LogDenied='
    line: 'LogDenied=all'
    backup: yes
  notify: restart firewalld
  when: ansible_os_family == "RedHat"

- name: Reload firewalld configuration
  systemd:
    name: firewalld
    state: reloaded
  when: ansible_os_family == "RedHat"

- name: Check firewalld status
  command: firewall-cmd --list-all
  register: firewalld_status
  changed_when: false
  when: ansible_os_family == "RedHat"

- name: Display firewalld status
  debug:
    var: firewalld_status.stdout_lines
  when: 
    - ansible_os_family == "RedHat"
    - firewalld_status.stdout_lines is defined
