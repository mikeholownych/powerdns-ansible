- name: Start and enable firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: true
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Set default zone to public
  firewalld:
    zone: public
    state: enabled
    permanent: true
    immediate: true
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Configure DNS firewall rules
  firewalld:
    port: '{{ item.port }}/{{ item.proto }}'
    zone: public
    permanent: true
    state: enabled
    immediate: true
  loop: '{{ firewall_ports }}'
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Allow SSH access
  firewalld:
    ansible.builtin.service: ssh
    zone: public
    permanent: true
    state: enabled
    immediate: true
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Allow PowerDNS API access
  firewalld:
    port: '{{ powerdns_webserver_port | default(8081) }}/tcp'
    zone: public
    permanent: true
    state: enabled
    immediate: true
    source: '{{ dns_network }}'
  when:
  - ansible_os_family == "RedHat"
  - powerdns_webserver_port is defined
  tags:
  - security
- name: Allow database access from localhost
  firewalld:
    port: '{{ powerdns_db_port }}/tcp'
    zone: public
    permanent: true
    state: enabled
    immediate: true
    source: 127.0.0.1/32
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Allow monitoring ports (if Prometheus is enabled)
  firewalld:
    port: '{{ monitoring_config.prometheus_port }}/tcp'
    zone: public
    permanent: true
    state: enabled
    immediate: true
    source: '{{ dns_network }}'
  when:
  - ansible_os_family == "RedHat"
  - monitoring_config.prometheus_port is defined
  tags:
  - security
- name: Allow NTP
  firewalld:
    ansible.builtin.service: ntp
    zone: public
    permanent: true
    state: enabled
    immediate: true
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Create rich rules for zone transfers between DNS servers
  firewalld:
    rich_rule: rule family="ipv4" source address="{{ hostvars[item]["ansible_default_ipv4"]["address"]
      }}" port protocol="tcp" port="53" accept
    zone: public
    permanent: true
    state: enabled
    immediate: true
  loop: '{{ groups[''powerdns_servers''] }}'
  when:
  - ansible_os_family == "RedHat"
  - item != inventory_hostname
  tags:
  - security
- name: Set firewalld default target to DROP
  firewalld:
    zone: public
    target: DROP
    permanent: true
    state: enabled
    immediate: true
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Enable firewalld logging
  ansible.builtin.lineinfile:
    path: /etc/firewalld/firewalld.conf
    regexp: ^LogDenied=
    line: LogDenied=all
    backup: true
  notify: restart firewalld
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Reload firewalld configuration
  ansible.builtin.systemd:
    name: firewalld
    state: reloaded
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Check firewalld status
  ansible.builtin.command: firewall-cmd --list-all
  register: firewalld_status
  changed_when: false
  when: ansible_os_family == "RedHat"
  tags:
  - security
- name: Display firewalld status
  ansible.builtin.debug:
    var: firewalld_status.stdout_lines
  when:
  - ansible_os_family == "RedHat"
  - firewalld_status.stdout_lines is defined
  tags:
  - security
