- name: Create self-healing directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
  - /opt/self-healing
  - /opt/self-healing/scripts
  - /opt/self-healing/configs
  - /var/log/self-healing
  tags:
  - self_healing
- name: Create configuration hash tracking
  ansible.builtin.template:
    src: config-tracker.sh.j2
    dest: /opt/self-healing/scripts/config-tracker.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Create service health monitor
  ansible.builtin.template:
    src: service-health-monitor.sh.j2
    dest: /opt/self-healing/scripts/service-health-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Create drift detection script
  ansible.builtin.template:
    src: drift-detector.sh.j2
    dest: /opt/self-healing/scripts/drift-detector.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Create auto-recovery script
  ansible.builtin.template:
    src: auto-recovery.sh.j2
    dest: /opt/self-healing/scripts/auto-recovery.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Create systemd watchdog service for PowerDNS
  ansible.builtin.template:
    src: powerdns-watchdog.service.j2
    dest: /etc/systemd/system/powerdns-watchdog.service
    owner: root
    group: root
    mode: '0644'
  notify:
  - reload systemd
  - restart powerdns-watchdog
  tags:
  - self_healing
- name: Create systemd watchdog timer
  ansible.builtin.template:
    src: powerdns-watchdog.timer.j2
    dest: /etc/systemd/system/powerdns-watchdog.timer
    owner: root
    group: root
    mode: '0644'
  notify:
  - reload systemd
  - start powerdns-watchdog-timer
  tags:
  - self_healing
- name: Create MySQL watchdog service
  ansible.builtin.template:
    src: mysql-watchdog.service.j2
    dest: /etc/systemd/system/mysql-watchdog.service
    owner: root
    group: root
    mode: '0644'
  notify:
  - reload systemd
  - restart mysql-watchdog
  tags:
  - self_healing
- name: Create MySQL watchdog timer
  ansible.builtin.template:
    src: mysql-watchdog.timer.j2
    dest: /etc/systemd/system/mysql-watchdog.timer
    owner: root
    group: root
    mode: '0644'
  notify:
  - reload systemd
  - start mysql-watchdog-timer
  tags:
  - self_healing
- name: Create configuration baseline
  ansible.builtin.shell: '# Create baseline hashes for critical configuration files

    find {{ item }} -type f -exec sha256sum {} \; > /opt/self-healing/configs/{{ item
    | basename }}.baseline 2>/dev/null || true

    '
  loop:
  - '{{ powerdns_config_dir }}'
  - /etc/mysql
  - /etc/haproxy
  - /etc/keepalived
  changed_when: false
  tags:
  - self_healing
- name: Schedule drift detection
  ansible.builtin.cron:
    name: Configuration Drift Detection
    cron_file: drift-detection
    user: root
    minute: '*/15'
    job: /opt/self-healing/scripts/drift-detector.sh
    state: present
  when: drift_detection_enabled | default(true)
  tags:
  - self_healing
- name: Schedule service health monitoring
  ansible.builtin.cron:
    name: Service Health Monitoring
    cron_file: service-health
    user: root
    minute: '*/5'
    job: /opt/self-healing/scripts/service-health-monitor.sh
    state: present
  when: service_health_monitoring_enabled | default(true)
  tags:
  - self_healing
- name: Create self-healing notification script
  ansible.builtin.template:
    src: self-healing-notify.sh.j2
    dest: /opt/self-healing/scripts/self-healing-notify.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Configure logrotate for self-healing logs
  ansible.builtin.template:
    src: self-healing-logrotate.j2
    dest: /etc/logrotate.d/self-healing
    owner: root
    group: root
    mode: '0644'
  tags:
  - self_healing
- name: Create Ansible pull configuration for GitOps
  ansible.builtin.template:
    src: ansible-pull.conf.j2
    dest: /opt/self-healing/ansible-pull.conf
    owner: root
    group: root
    mode: '0600'
  when: gitops_enabled | default(false)
  tags:
  - self_healing
- name: Schedule Ansible pull for GitOps
  ansible.builtin.cron:
    name: Ansible Pull GitOps
    cron_file: ansible-pull-gitops
    user: root
    minute: '0'
    hour: '*/4'
    job: ansible-pull -U {{ gitops_repo_url }} -C {{ gitops_branch | default('main')
      }} -i {{ gitops_inventory_path | default('inventory/hosts.yml') }} {{ gitops_playbook
      | default('powerdns-playbook.yml') }} >> /var/log/self-healing/ansible-pull.log
      2>&1
    state: '{{ ''present'' if gitops_enabled | default(false) else ''absent'' }}'
  tags:
  - self_healing
- name: Create performance monitoring script
  ansible.builtin.template:
    src: performance-monitor.sh.j2
    dest: /opt/self-healing/scripts/performance-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Schedule performance monitoring
  ansible.builtin.cron:
    name: Performance Monitoring
    cron_file: performance-monitor
    user: root
    minute: '*/10'
    job: /opt/self-healing/scripts/performance-monitor.sh
    state: present
  when: performance_monitoring_enabled | default(true)
  tags:
  - self_healing
- name: Create backup verification script
  ansible.builtin.template:
    src: backup-verifier.sh.j2
    dest: /opt/self-healing/scripts/backup-verifier.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Schedule backup verification
  ansible.builtin.cron:
    name: Backup Verification
    cron_file: backup-verification
    user: root
    minute: '0'
    hour: '6'
    job: /opt/self-healing/scripts/backup-verifier.sh
    state: present
  when: backup_verification_enabled | default(true)
  tags:
  - self_healing
- name: Enable and start watchdog services
  ansible.builtin.systemd:
    name: '{{ item }}'
    enabled: true
    state: started
    daemon_reload: true
  loop:
  - powerdns-watchdog.timer
  - mysql-watchdog.timer
  when: watchdog_enabled | default(true)
  tags:
  - self_healing
- name: Create self-healing dashboard script
  ansible.builtin.template:
    src: self-healing-dashboard.sh.j2
    dest: /opt/self-healing/scripts/self-healing-dashboard.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Create self-healing status check
  ansible.builtin.template:
    src: self-healing-status.sh.j2
    dest: /usr/local/bin/self-healing-status.sh
    owner: root
    group: root
    mode: '0755'
  tags:
  - self_healing
- name: Test self-healing functionality
  ansible.builtin.command: /opt/self-healing/scripts/service-health-monitor.sh --test
  register: self_healing_test
  changed_when: false
  ignore_errors: true
  tags:
  - self_healing
- name: Display self-healing test result
  ansible.builtin.debug:
    msg: 'Self-healing test: {{ ''PASSED'' if self_healing_test.rc == 0 else ''FAILED''
      }}'
  tags:
  - self_healing
