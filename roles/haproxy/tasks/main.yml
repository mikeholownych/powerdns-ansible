- name: Install HAProxy
  ansible.builtin.package:
    name: haproxy
    state: present
  tags:
    - haproxy
- name: Install HAProxy stats packages
  ansible.builtin.package:
    name: '{{ haproxy_stats_packages[ansible_os_family] | default([]) }}'
    state: present
  when: haproxy_stats_packages[ansible_os_family] is defined
  tags:
    - haproxy
- name: Check HAProxy config exists
  ansible.builtin.stat:
    path: /etc/haproxy/haproxy.cfg
  register: haproxy_config
  tags:
    - haproxy
- name: Create HAProxy configuration backup
  ansible.builtin.copy:
    src: /etc/haproxy/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg.backup.{{ ansible_date_time.epoch }}
    remote_src: true
    owner: root
    group: root
    mode: '0644'
  when: haproxy_config.stat.exists
  failed_when: false
  tags:
    - haproxy
- name: Generate HAProxy configuration
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart haproxy
  tags:
    - haproxy
- name: Create HAProxy systemd override directory
  ansible.builtin.file:
    path: /etc/systemd/system/haproxy.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - haproxy
- name: Configure HAProxy systemd service overrides
  ansible.builtin.template:
    src: haproxy-override.conf.j2
    dest: /etc/systemd/system/haproxy.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload systemd
    - Restart haproxy
  tags:
    - haproxy
- name: Create HAProxy stats user
  ansible.builtin.user:
    name: haproxy-stats
    system: true
    shell: /bin/false
    home: /var/lib/haproxy
    create_home: false
  when: haproxy_stats_enabled | default(true)
  tags:
    - haproxy
- name: Configure HAProxy log rotation
  ansible.builtin.template:
    src: haproxy-logrotate.j2
    dest: /etc/logrotate.d/haproxy
    owner: root
    group: root
    mode: '0644'
  tags:
    - haproxy
- name: Create HAProxy management scripts
  ansible.builtin.template:
    src: '{{ item }}.j2'
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: '0755'
  loop:
    - haproxy-stats.sh
    - haproxy-health-check.sh
    - haproxy-reload.sh
  tags:
    - haproxy
- name: Enable and start HAProxy service
  ansible.builtin.systemd:
    name: haproxy
    enabled: true
    state: started
    daemon_reload: true
  tags:
    - haproxy
- name: Wait for HAProxy to start
  ansible.builtin.wait_for:
    port: '{{ haproxy_stats_port | default(8404) }}'
    host: '{{ ansible_default_ipv4.address }}'
    delay: 5
    timeout: 30
  when: haproxy_stats_enabled | default(true)
  tags:
    - haproxy
- name: Check HAProxy service status
  ansible.builtin.systemd:
    name: haproxy
  register: haproxy_service_status
  tags:
    - haproxy
- name: Display HAProxy service status
  ansible.builtin.debug:
    msg: HAProxy service is {{ haproxy_service_status.status.ActiveState }}
  tags:
    - haproxy
- name: Test HAProxy configuration
  ansible.builtin.command: haproxy -c -f /etc/haproxy/haproxy.cfg
  register: config_check
  failed_when: config_check.rc != 0
  changed_when: false
  tags:
    - haproxy
- name: Create HAProxy monitoring user for database
  community.mysql.mysql_user:
    name: haproxy_monitor
    password: '{{ haproxy_monitor_password | default(''monitor123'') }}'
    priv: '*.*:USAGE'
    host: localhost
    state: present
    login_user: root
    login_password: '{{ mysql_root_password | default(omit) }}'
  when: haproxy_mysql_monitoring | default(true)
  tags:
    - haproxy
- name: Verify HAProxy is load balancing DNS
  ansible.builtin.command: dig @{{ ansible_default_ipv4.address }} -p {{ haproxy_dns_port | default(53) }} localhost
  register: dns_lb_test
  failed_when: false
  changed_when: false
  tags:
    - haproxy
- name: Display DNS load balancing test result
  ansible.builtin.debug:
    msg: 'DNS load balancing test: {{ ''PASSED'' if dns_lb_test.rc == 0 else ''FAILED''
      }}'
  tags:
    - haproxy
