# HAProxy Configuration for PowerDNS Load Balancing
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

global
    log         127.0.0.1:514 local0
    chroot      /var/lib/haproxy
    stats       socket /run/haproxy/admin.sock mode 660 level admin
    stats       timeout 30s
    user        haproxy
    group       haproxy
    daemon

    # Default SSL material locations
    ca-base     /etc/ssl/certs
    crt-base    /etc/ssl/private

    # Intermediate configuration
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+CHACHA20:RSA+AESGCM:RSA+SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  dontlognull
    option                  log-health-checks
    timeout connect         5000
    timeout client          50000
    timeout server          50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

{% if haproxy_stats_enabled | default(true) %}
#---------------------------------------------------------------------
# HAProxy Statistics
#---------------------------------------------------------------------
listen stats
    bind *:{{ haproxy_stats_port | default(8404) }}
    mode http
    stats enable
    stats uri {{ haproxy_stats_uri | default('/stats') }}
    stats realm HAProxy\ Statistics
    stats auth {{ haproxy_stats_user | default('admin') }}:{{ haproxy_stats_password | default('admin123') }}
    stats refresh 30s
    stats show-node
    stats show-legends
    stats admin if TRUE
{% endif %}

#---------------------------------------------------------------------
# DNS Load Balancing - UDP
#---------------------------------------------------------------------
frontend dns_udp_frontend
    bind *:{{ haproxy_dns_port | default(53) }}
    mode tcp
    option tcplog
    default_backend dns_udp_backend

backend dns_udp_backend
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect port 53
    tcp-check send-binary 00010000000100000000000003777777076578616d706c6503636f6d0000010001
    tcp-check expect binary 0001
{% for host in groups['powerdns_servers'] %}
    server {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:53 check inter 5s rise 2 fall 3
{% endfor %}

#---------------------------------------------------------------------
# DNS Load Balancing - TCP
#---------------------------------------------------------------------
frontend dns_tcp_frontend
    bind *:{{ haproxy_dns_port | default(53) }}
    mode tcp
    option tcplog
    default_backend dns_tcp_backend

backend dns_tcp_backend
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect port 53
{% for host in groups['powerdns_servers'] %}
    server {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:53 check inter 5s rise 2 fall 3
{% endfor %}

{% if haproxy_api_enabled | default(true) %}
#---------------------------------------------------------------------
# PowerDNS API Load Balancing
#---------------------------------------------------------------------
frontend powerdns_api_frontend
    bind *:{{ haproxy_api_port | default(8081) }}
    mode http
    option httplog
    default_backend powerdns_api_backend

backend powerdns_api_backend
    mode http
    balance roundrobin
    option httpchk GET /api/v1/servers/localhost
    http-check expect status 200
{% for host in groups['powerdns_servers'] %}
    server {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ powerdns_webserver_port | default(8081) }} check inter 10s rise 2 fall 3
{% endfor %}
{% endif %}

{% if haproxy_mysql_enabled | default(true) %}
#---------------------------------------------------------------------
# MySQL/MariaDB Load Balancing
#---------------------------------------------------------------------
frontend mysql_frontend
    bind *:{{ haproxy_mysql_port | default(3306) }}
    mode tcp
    option tcplog
    default_backend mysql_backend

backend mysql_backend
    mode tcp
    balance roundrobin
    option mysql-check user {{ haproxy_monitor_user | default('haproxy_monitor') }}
{% for host in groups['powerdns_servers'] %}
    server {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:3306 check inter 10s rise 2 fall 3
{% endfor %}
{% endif %}

{% if haproxy_recursor_enabled | default(false) %}
#---------------------------------------------------------------------
# PowerDNS Recursor Load Balancing
#---------------------------------------------------------------------
frontend recursor_frontend
    bind *:{{ haproxy_recursor_port | default(5353) }}
    mode tcp
    option tcplog
    default_backend recursor_backend

backend recursor_backend
    mode tcp
    balance roundrobin
    option tcp-check
    tcp-check connect port {{ powerdns_recursor_port | default(5353) }}
{% for host in groups['powerdns_recursor'] | default([]) %}
    server {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ powerdns_recursor_port | default(5353) }} check inter 5s rise 2 fall 3
{% endfor %}
{% endif %}

#---------------------------------------------------------------------
# Health Check Endpoints
#---------------------------------------------------------------------
frontend health_check
    bind *:{{ haproxy_health_port | default(8080) }}
    mode http
    option httplog
    monitor-uri /health
    monitor fail if { nbsrv(dns_udp_backend) lt 1 }
    monitor fail if { nbsrv(dns_tcp_backend) lt 1 }
{% if haproxy_mysql_enabled | default(true) %}
    monitor fail if { nbsrv(mysql_backend) lt 1 }
{% endif %}

#---------------------------------------------------------------------
# Error Pages
#---------------------------------------------------------------------
backend error_503
    mode http
    errorfile 503 /etc/haproxy/errors/503.http
